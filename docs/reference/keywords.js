export const keywords= [
{ id:"added"              } ,
{ id:"aggregate"          } ,
{ id:"and"                } ,
{ id:"any"                } ,
{ id:"archetype"          } ,
{ id:"as"                 } ,
{ id:"assert"             } ,
{ id:"asset"              } ,
{ id:"asset_view"         } ,
{ id:"at"                 } ,
{ id:"before"             } ,
{ id:"begin"              } ,
{ id:"big_map"            } ,
{ id:"but"                } ,
{ id:"by"                 } ,
{ id:"call"               } ,
{ id:"called"             } ,
{ id:"call_view"           } ,
{ id:"const"              } ,
{ id:"constant"           } ,
{ id:"contract"           } ,
{ id:"definition"         } ,
{ id:"div"                } ,
{ id:"do"                 } ,
{ id:"do_fail_if"           } ,
{ id:"done"               } ,
{ id:"do_require"          } ,
{ id:"effect"             } ,
{ id:"else"               } ,
{ id:"emit"               } ,
{ id:"emptylist"          } ,
{ id:"end"                } ,
{ id:"entry"              } ,
{ id:"entrypoint"         } ,
{ id:"enum"               } ,
{ id:"event"              } ,
{ id:"exists"             } ,
{ id:"extension"          } ,
{ id:"fail"               } ,
{ id:"fail if"             } ,
{ id:"fails"              } ,
{ id:"false"              } ,
{ id:"fold"               } ,
{ id:"for"                } ,
{ id:"forall"             } ,
{ id:"from"               } ,
{ id:"function"           } ,
{ id:"getter"             } ,
{ id:"identified"         } ,
{ id:"if"                 } ,
{ id:"in"                 } ,
{ id:"initial"            } ,
{ id:"initialized"        } ,
{ id:"invariant"          } ,
{ id:"iter"               } ,
{ id:"label"              } ,
{ id:"lambda"             } ,
{ id:"left"               } ,
{ id:"let"                } ,
{ id:"list"               } ,
{ id:"map"                } ,
{ id:"match"              } ,
{ id:"namespace"          } ,
{ id:"none"               } ,
{ id:"not"                } ,
{ id:"on"                 } ,
{ id:"option"             } ,
{ id:"or"                 } ,
{ id:"otherwise"          } ,
{ id:"partition"          } ,
{ id:"asset_key"               } ,
{ id:"postcondition"      } ,
{ id:"predicate"          } ,
{ id:"record"             } ,
{ id:"ref"                } ,
{ id:"removed"            } ,
{ id:"require"            } ,
{ id:"require_entrypoint" } ,
{ id:"return"             } ,
{ id:"right"              } ,
{ id:"sapling_state"      } ,
{ id:"sapling_transaction"} ,
{ id:"security"           } ,
{ id:"self"               } ,
{ id:"set"                } ,
{ id:"shadow"             } ,
{ id:"some"               } ,
{ id:"sorted"             } ,
{ id:"sourced"            } ,
{ id:"specification"      } ,
{ id:"states"             } ,
{ id:"then"               } ,
{ id:"ticket"             } ,
{ id:"to"                 } ,
{ id:"transfer"           } ,
{ id:"transition"         } ,
{ id:"true"               } ,
{ id:"type"               } ,
{ id:"unmoved"            } ,
{ id:"unpack"             } ,
{ id:"Unit"               } ,
{ id:"use"                } ,
{ id:"var"                } ,
{ id:"variable"           } ,
{ id:"view"               } ,
{ id:"when"               } ,
{ id:"while"              } ,
{ id:"with"               } ,
{ id:"xor"                } ,
]