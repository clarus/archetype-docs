<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://completium.github.io/archetype-docs/blog</id>
    <title>Archetype Documentation Blog</title>
    <updated>2022-06-04T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://completium.github.io/archetype-docs/blog"/>
    <subtitle>Archetype Documentation Blog</subtitle>
    <icon>https://completium.github.io/archetype-docs/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Shortcut evaluation]]></title>
        <id>shortcut-evaluation</id>
        <link href="https://completium.github.io/archetype-docs/blog/shortcut-evaluation"/>
        <updated>2022-06-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We present a change in version 1.2.17 of the evaluation process of boolean operators and and or in test expression of the if instruction and expression.]]></summary>
        <content type="html"><![CDATA[<p>We present a change in version <code>1.2.17</code> of the evaluation process of boolean operators <a href="/archetype-docs/docs/reference/expressions/operators/arithmetic#a-and-b"><code>and</code></a> and <a href="/archetype-docs/docs/reference/expressions/operators/arithmetic#a-or-b"><code>or</code></a> in test expression of the <a href="/archetype-docs/docs/reference/instructions/control#if"><code>if</code></a> instruction and expression.</p><p>Consider the following <code>if</code> instruction:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token control" style="color:rgb(189, 147, 249)">if</span><span class="token plain"> a </span><span class="token logic" style="color:rgb(68, 134, 255)">and</span><span class="token plain"> b </span><span class="token control" style="color:rgb(189, 147, 249)">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">/* */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token control" style="color:rgb(189, 147, 249)">end</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>Before version <code>1.2.7</code>, both expressions <code>a</code> and <code>b</code> were evaluated, meaning that if <code>b</code> is a <a href="/archetype-docs/docs/reference/instructions/divergent#faile">failing</a> expression, the evaluation fails even if <code>a</code> is true.</p><p>Since version <code>1.2.7</code>, <code>a and b</code> is replaced by <a href="/archetype-docs/docs/reference/expressions/controls#if">conditional</a> expression:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token control" style="color:rgb(189, 147, 249)">if</span><span class="token plain"> a </span><span class="token control" style="color:rgb(189, 147, 249)">then</span><span class="token plain"> b </span><span class="token control" style="color:rgb(189, 147, 249)">else</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(68, 134, 255)">false</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>Equivalently, expression <code>a or b</code> is replaced by:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token control" style="color:rgb(189, 147, 249)">if</span><span class="token plain"> a </span><span class="token control" style="color:rgb(189, 147, 249)">then</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(68, 134, 255)">true</span><span class="token plain"> </span><span class="token control" style="color:rgb(189, 147, 249)">else</span><span class="token plain"> b </span><span class="token control" style="color:rgb(189, 147, 249)">else</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(68, 134, 255)">false</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>Such that expression <code>b</code> is evaluated only when necessary.</p>]]></content>
        <author>
            <name>Guillaume Duhamel</name>
            <uri>https://www.linkedin.com/in/guillaumeduhamel/</uri>
        </author>
        <category label="and" term="and"/>
        <category label="or" term="or"/>
        <category label="if" term="if"/>
        <category label="new feature" term="new feature"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessing assets]]></title>
        <id>asset-access</id>
        <link href="https://completium.github.io/archetype-docs/blog/asset-access"/>
        <updated>2022-05-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We present an improvement in the way assets data are accessed since version 1.2.16 of Archetype.]]></summary>
        <content type="html"><![CDATA[<p>We present an improvement in the way <a href="/archetype-docs/docs/asset">assets</a> data are accessed since version <a href="https://github.com/edukera/archetype-lang/releases/tag/1.2.16" target="_blank" rel="noopener noreferrer"><code>1.2.16</code></a> of Archetype.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="problem">Problem<a class="hash-link" href="#problem" title="Direct link to heading">â€‹</a></h3><p>Until this version, the only way to access an asset data was the field accessor operator of the form <code>A[k].f</code>, where <code>A</code> is the asset collection, <code>k</code> the asset key and <code>f</code> the asset field.</p><p>For example, consider the following asset declaration:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token declaration" style="color:rgb(233, 72, 21)">asset</span><span class="token plain"> vehicle </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  vin          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  manufacturer </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  year         </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">nat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  nbdoors      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">nat</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The manufacturer of vehicle <code>"1G1AF1F57A7192174"</code> is then accessed as follows:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> m = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">manufacturer</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>This expression fails when the key is not found in the asset collection. As a consequence, accessing several fields sucessively repeats the test and fail instruction as in:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> m = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">manufacturer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> y = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">year</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> n = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">nbdoors</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>Here the test and fail instructions are repeated three times.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="solution">Solution<a class="hash-link" href="#solution" title="Direct link to heading">â€‹</a></h3><p>It is now possible to retrieve the asset data in the form of a record with the <a href="/archetype-docs/docs/reference/expressions/asset#ak--asset_keya"><code>[]</code></a> operator.</p><p>In the example above, the proper way to retrieve all asset data is now as follows:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> v = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> m = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">manufacturer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> y = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">year</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> n = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">nbdoors</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The access operator still fails if the key is not <code>vehicle</code> collection.</p><p>Version <a href="https://github.com/edukera/archetype-lang/releases/tag/1.2.16" target="_blank" rel="noopener noreferrer"><code>1.2.16</code></a> also introduces the <a href="/archetype-docs/docs/reference/expressions/asset#agetk--asset_keya"><code>get</code></a> method for asset collection. As for <a href="/archetype-docs/docs/reference/types#map%3CK,%20V%3E"><code>map</code></a>, it returns an option of record:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> k = </span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token control" style="color:rgb(189, 147, 249)">match</span><span class="token plain"> vehicle</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token builtin" style="color:rgb(68, 134, 255)">get</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">k</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token control" style="color:rgb(189, 147, 249)">with</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(68, 134, 255)">some</span><span class="token plain"> v -&gt;</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> m = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">manufacturer</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> y = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">year</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> n = v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">nbdoors</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">/* ... */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(68, 134, 255)">none</span><span class="token plain"> -&gt; </span><span class="token fail" style="color:rgb(255, 85, 85)">fail</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Key "</span><span class="token plain"> + k + </span><span class="token string" style="color:rgb(255, 121, 198)">" not found in collection"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token control" style="color:rgb(189, 147, 249)">end</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="single-field-access">Single field access<a class="hash-link" href="#single-field-access" title="Direct link to heading">â€‹</a></h3><p>Situations where a single asset field is accessed is very common though. In this case, version <a href="https://github.com/edukera/archetype-lang/releases/tag/1.2.16" target="_blank" rel="noopener noreferrer"><code>1.2.16</code></a> provides two new dedicated operators: <a href="/archetype-docs/docs/reference/expressions/asset#ak--asset_keyaf"><code>[]?.</code></a> and <a href="/archetype-docs/docs/reference/expressions/asset#ak--asset_keya--e--d"><code>[]?:</code></a>.</p><p>For example, <code>is_coupe</code> below is true if field <code>nbdoors</code> is equal to 3, and <code>false</code> if asset is not found:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> k = </span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> is_coupe = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token plain">k</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token plain"> </span><span class="token access" style="color:rgb(68, 134, 255)">?</span><span class="token plain"> </span><span class="token control" style="color:rgb(189, 147, 249)">the</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">nbdoors = 3 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(68, 134, 255)">false</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The following retrieves an <a href="/archetype-docs/docs/reference/types#option%3CT%3E"><code>option</code></a> of <a href="/archetype-docs/docs/reference/types#nat"><code>nat</code></a> to treat more specifically the case when the asset is not found:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> on = vehicle</span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"1G1AF1F57A7192174"</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><span class="token access" style="color:rgb(68, 134, 255)">?</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">nbdoors</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div>]]></content>
        <author>
            <name>Guillaume Duhamel</name>
            <uri>https://www.linkedin.com/in/guillaumeduhamel/</uri>
        </author>
        <category label="asset" term="asset"/>
        <category label="new feature" term="new feature"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Iterable big map]]></title>
        <id>iterable-big-map</id>
        <link href="https://completium.github.io/archetype-docs/blog/iterable-big-map"/>
        <updated>2022-04-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We present a new type of map called iterablebigmap, which has the scalability property of a bigmap, and which can be iterated like a basic map.]]></summary>
        <content type="html"><![CDATA[<p>We present a new type of map called <a href="/archetype-docs/docs/reference/types#iterable_big_map%3CK,%20V%3E"><code>iterable_big_map</code></a>, which has the scalability property of a <a href="/archetype-docs/docs/reference/types#big_map%3CK,%20V%3E"><code>big_map</code></a>, and which can be <a href="/archetype-docs/docs/reference/instructions/containers#map">iterated</a> like a basic <a href="/archetype-docs/docs/reference/types#map%3CK,%20V%3E"><code>map</code></a>.</p><p>This feature was suggested by <a href="https://www.nomadic-labs.com/" target="_blank" rel="noopener noreferrer">Nomadic Labs</a>. Thank you to <a href="https://www.linkedin.com/in/lucas-felli-815653111/" target="_blank" rel="noopener noreferrer">Lucas Feli</a> and <a href="https://www.linkedin.com/in/charles-dehlinger-a34699166/" target="_blank" rel="noopener noreferrer">Charles Delhinger</a> for the algorithm.</p><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="example">Example<a class="hash-link" href="#example" title="Direct link to heading">â€‹</a></h2><p>Consider the following declaration of an iterable big map between a <code>nat</code> key and a <code>bytes</code> value:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token declaration" style="color:rgb(233, 72, 21)">variable</span><span class="token plain"> ibm </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">iterable_big_map</span><span class="token plain">&lt;</span><span class="token type" style="color:rgb(241, 250, 140)">nat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">bytes</span><span class="token plain">&gt; = </span><span class="token access" style="color:rgb(68, 134, 255)">[</span><span class="token access" style="color:rgb(68, 134, 255)">]</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>While <code>ibm</code> has the scalability of a big map (in terms of number of entries), it can also be iterated with the <code>for</code> control instruction:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token control" style="color:rgb(189, 147, 249)">for</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">k</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">v</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token control" style="color:rgb(189, 147, 249)">in</span><span class="token plain"> ibm </span><span class="token control" style="color:rgb(189, 147, 249)">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">/* k is the key, v is the value */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token control" style="color:rgb(189, 147, 249)">done</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>Note that:</p><ul><li>the natural order of the key values is not garanteed (unlike basic <a href="/archetype-docs/docs/reference/types#map%3CK,%20V%3E"><code>map</code></a>)</li><li>the cost of operations increases compared to a <a href="/archetype-docs/docs/reference/types#big_map%3CK,%20V%3E"><code>big_map</code></a></li></ul></div></div><p>An Archetype <a href="/archetype-docs/docs/asset">asset</a> may now be compiled as an iterable big map; it then benefits from the <em>whole</em> asset <a href="/archetype-docs/docs/asset#api">API</a>. For example:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token declaration" style="color:rgb(233, 72, 21)">asset</span><span class="token plain"> car </span><span class="token declaration" style="color:rgb(233, 72, 21)">to iterable_big_map</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  vin       </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">string</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  nbdoors   </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">nat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  nbrepairs </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">nat</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  owner     </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">address</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="principle">Principle<a class="hash-link" href="#principle" title="Direct link to heading">â€‹</a></h2><p>Since it is always possible to iterate from <code>1</code> to <code>n</code>, the idea is to create a big map that associates the iteration integer value to the map's key value. It is also necessary to associate the map key back to this iteration integer (see <em>remove</em> operation below).</p><p>The following example illustrates the design of two big maps called <em>Keys</em> and <em>Values</em> derived from the original map:</p><center><img src="/archetype-docs/img/blog/ibm1-light.svg" alt="IBM1" class="themedImage_W2Cr themedImage--light_TfLj" style="width:80%"><img src="/archetype-docs/img/blog/ibm1-dark.svg" alt="IBM1" class="themedImage_W2Cr themedImage--dark_oUvU" style="width:80%"></center><ul><li><em>Keys</em> associates the iteration integer with the map key</li><li><em>Values</em> is the original map where the value is augmented with the iteration integer</li></ul><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="add">Add<a class="hash-link" href="#add" title="Direct link to heading">â€‹</a></h3><p>The <em>add</em> operation consists in:</p><ul><li>associating the next iteration value (<code>Size + 1</code>) with the new key in the <em>Keys</em> map</li><li>associating the new key to the pair of next iteration value and new value in the <em>Values</em> map</li><li>incrementing the <em>Size</em> value</li></ul><p>The operation is illustrated below with the addition of the key <code>131</code> with value <code>e5</code>:</p><center><img src="/archetype-docs/img/blog/ibm2-light.svg" alt="IBM1" class="themedImage_W2Cr themedImage--light_TfLj" style="width:80%"><img src="/archetype-docs/img/blog/ibm2-dark.svg" alt="IBM1" class="themedImage_W2Cr themedImage--dark_oUvU" style="width:80%"></center><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="update">Update<a class="hash-link" href="#update" title="Direct link to heading">â€‹</a></h3><p>The <em>update</em> operation is straightforward and consists in updating the <em>Values</em> map with the new value.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="remove">Remove<a class="hash-link" href="#remove" title="Direct link to heading">â€‹</a></h3><p>The <em>remove</em> operation is a step-wise process:</p><ul><li>the iteration index of the removed key is retrieved from the <em>Values</em> map and used to remove the entry in the <em>Keys</em> map</li><li>the entry is then removed from the <em>Values</em> map</li></ul><p>At this stage, the iteration values are not consistent since one iteration value has been removed.</p><p>It is then necessary to associate the last added element with the removed iteration integer by:</p><ul><li>removing the last iteration integer and associate back the removed iteration integer with the last added key in the <em>Keys</em> mpa</li><li>updating the iteration integer of last added key in the <em>Values</em> map</li></ul><p>The process is illustrated below with the removal of the entry <code>29</code> (associated with iteration value <code>2</code>):</p><center><img src="/archetype-docs/img/blog/ibm3-light.svg" alt="IBM1" class="themedImage_W2Cr themedImage--light_TfLj" style="width:80%"><img src="/archetype-docs/img/blog/ibm3-dark.svg" alt="IBM1" class="themedImage_W2Cr themedImage--dark_oUvU" style="width:80%"></center><h2 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="implementation">Implementation<a class="hash-link" href="#implementation" title="Direct link to heading">â€‹</a></h2><p>An iterable big map is implemented as a triplet of two big maps (<em>Keys</em> and <em>Values</em>) and one <em>Size</em> integer.</p><p>The screenshot below of <a href="https://better-call.dev/" target="_blank" rel="noopener noreferrer">Better Call Dev</a> shows the resulting triplet:</p><p><img loading="lazy" alt="ibm4" src="/archetype-docs/assets/images/ibm4-4f2e1d8cdb6958333d4639b10c76426d.png" width="1238" height="226" class="img_E7b_"></p>]]></content>
        <author>
            <name>Benoit Rognier</name>
            <uri>https://www.linkedin.com/in/benoitrognier/</uri>
        </author>
        <category label="big map" term="big map"/>
        <category label="new feature" term="new feature"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Events]]></title>
        <id>events</id>
        <link href="https://completium.github.io/archetype-docs/blog/events"/>
        <updated>2022-03-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We present the new instruction emit to emit an event, in a similar an event is emitted in languages like solidity.]]></summary>
        <content type="html"><![CDATA[<p>We present the new instruction <code>emit</code> to emit an event, in a similar an event is emitted in languages like solidity.</p><p>This feater was suggested by <a href="https://www.nomadic-labs.com/" target="_blank" rel="noopener noreferrer">Nomadic Labs</a>. Thank you to <a href="https://www.linkedin.com/in/brunobernardo/" target="_blank" rel="noopener noreferrer">Bruno Bernardo</a> for the event well mechanism.</p><p>An event is declared with the <code>event</code> keyword, similarly to a record:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token declaration" style="color:rgb(233, 72, 21)">event</span><span class="token plain"> HighestBidIncreased </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  bidder </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">address</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  amount </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token type" style="color:rgb(241, 250, 140)">tez</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The <code>emit</code> instruction is then used in an entrypoint as illustrated below:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token entry" style="color:rgb(233, 72, 21)">entry</span><span class="token plain"> bid</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">/* ... */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token control" style="color:rgb(189, 147, 249)">if</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">transferred</span><span class="token plain"> &gt; highestbid </span><span class="token control" style="color:rgb(189, 147, 249)">then</span><span class="token plain"> </span><span class="token control" style="color:rgb(189, 147, 249)">begin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">    highestbid </span><span class="token function" style="color:rgb(80, 250, 123)">:=</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">transferred</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">    </span><span class="token builtin" style="color:rgb(68, 134, 255)">emit</span><span class="token function" style="color:rgb(80, 250, 123)">&lt;</span><span class="token plain">HighestBidIncreased&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">transferred</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token control" style="color:rgb(189, 147, 249)">end</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="event-well">Event well<a class="hash-link" href="#event-well" title="Direct link to heading">â€‹</a></h3><p>The emition of an event generates a call to a contract called <em>event well</em>. This contract provides a single entrypoint named <em>event</em> which takes an argument typed <a href="/archetype-docs/docs/reference/types#bytes"><code>bytes</code></a>.</p><p>The code of the event well contract is then:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token archetype" style="color:#2FCAC3">archetype</span><span class="token plain"> event_well</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token entry" style="color:rgb(233, 72, 21)">entry</span><span class="token plain"> </span><span class="token unkeyworded">%event(arg : bytes) {}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The event well is deployed at the address <a href="https://better-call.dev/ithacanet/KT1AHVF5m8XaWPQCGgfAsZ9eSJJZ7WVGV2hE/operations" target="_blank" rel="noopener noreferrer"><code>KT1AHVF5m8XaWPQCGgfAsZ9eSJJZ7WVGV2hE</code></a> on the mainnet, and at <a href="https://better-call.dev/ithacanet/KT1ReVgfaUqHzWWiNRfPXQxf7TaBLVbxrztw/operations" target="_blank" rel="noopener noreferrer"><code>KT1ReVgfaUqHzWWiNRfPXQxf7TaBLVbxrztw</code></a>on Ithacanet.</p><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="event">Event<a class="hash-link" href="#event" title="Direct link to heading">â€‹</a></h3><p>The <code>emit</code> instruction builds the event argument as a triplet of:</p><ul><li>the event name</li><li>the event annotated Michelson type</li><li>packed value of the event data</li></ul><p>In the example of the <em>HighestBidIncreased</em> presented above, the following <code>emit</code> instruction:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token builtin" style="color:rgb(68, 134, 255)">emit</span><span class="token function" style="color:rgb(80, 250, 123)">&lt;</span><span class="token plain">HighestBidIncreased&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">transferred</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>is equivalent to:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> e = </span><span class="token crypto" style="color:rgb(68, 134, 255)">pack</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"HighestBidIncreased"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"pair (address %bidder) (tez %amount)"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token crypto" style="color:rgb(68, 134, 255)">pack</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">    bidder = </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">source</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">    amount = </span><span class="token constant" style="color:rgb(189, 147, 249);font-style:italic">transferred</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token decl" style="color:rgb(189, 147, 249)">const</span><span class="token plain"> event_well = KT1AHVF5m8XaWPQCGgfAsZ9eSJJZ7WVGV2hE</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token transfer-rule builtin" style="color:rgb(68, 134, 255)">transfer</span><span class="token transfer-rule"> 0tz </span><span class="token transfer-rule builtin" style="color:rgb(68, 134, 255)">to</span><span class="token plain"> event_well </span><span class="token builtin" style="color:rgb(68, 134, 255)">call</span><span class="token plain"> </span><span class="token declaration" style="color:rgb(233, 72, 21)">event</span><span class="token plain">&lt;</span><span class="token type" style="color:rgb(241, 250, 140)">bytes</span><span class="token plain">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">e</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="retrieve-events">Retrieve events<a class="hash-link" href="#retrieve-events" title="Direct link to heading">â€‹</a></h3><p>A Typescript library, called the <a href="https://www.npmjs.com/package/@completium/event-well-crank" target="_blank" rel="noopener noreferrer"><em>crank</em></a>, is available to retrieve event data from a Dapp.</p><p>The <em>crank</em> receives events from contracts and executes event handler functions.</p><p>For example, the <code>handleHBI</code> function below is executed when a <code>HighestBidIncreased</code> event is emitted by the contract:</p><div class="codeBlockContainer_I0IT language-js theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-js codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> startCrank </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@completium/event-well-crank'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token imports">  </span><span class="token imports maybe-class-name">HighestBidIncreased</span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token imports"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token imports">  register_HighestBidIncreased </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'./bid-bindings.ts'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> contract </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"KT1..."</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// address of the emitter contract</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(80, 250, 123)">handleHBI</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter literal-property property">hbi</span><span class="token parameter"> </span><span class="token parameter operator">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">HighestBidIncreased</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">log</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">hbi</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token template-string interpolation property-access">bidder</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string string" style="color:rgb(255, 121, 198)"> is now the highest bid bidder.</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// register Handler</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">register_HighestBidIncreased</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">contract</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> handleHBI</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// Start crank</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">await</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">startCrank</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>The HighestBidIncreased type and register_HighestBidIncreased function are bindings code generated by completium CLI:</p><div class="codeBlockContainer_I0IT theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-text codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">$ completium-cli generate bindings-ts bid.arl &gt; bid-bindings.ts</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_R0VQ" id="dapp-example">Dapp example<a class="hash-link" href="#dapp-example" title="Direct link to heading">â€‹</a></h3><p>The <em>Bulb</em> Dapp example is available <a href="https://github.com/completium/bulb-event-demo" target="_blank" rel="noopener noreferrer">here</a>.</p><p>The bulb is switched on/off by receiving events from the bulb contract. The contract is designed as a simplistic state machine with On and Off states. Two events <code>SwitchedOn</code> and <code>SwitchedOff</code> are defined and emitted respectively by <code>switchOn</code> and <code>switchOff</code> entrypoints:</p><div class="codeBlockContainer_I0IT language-archetype theme-code-block"><div class="codeBlockContent_wNvx" style="color:#F8F8F2;background-color:rgb(31 58 58);border-radius:0px"><pre tabindex="0" class="prism-code language-archetype codeBlock_jd64 thin-scrollbar"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token archetype" style="color:#2FCAC3">archetype</span><span class="token plain"> bulb</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token declaration" style="color:rgb(233, 72, 21)">states</span><span class="token plain"> = </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token plain"> On </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token plain"> Off</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token declaration" style="color:rgb(233, 72, 21)">event</span><span class="token plain"> SwitchedOn </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token declaration" style="color:rgb(233, 72, 21)">event</span><span class="token plain"> SwitchedOff </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token entry" style="color:rgb(233, 72, 21)">transition</span><span class="token plain"> switchOn</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token section" style="color:rgb(255, 184, 108)">from</span><span class="token plain"> Off </span><span class="token section" style="color:rgb(255, 184, 108)">to</span><span class="token plain"> On</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token section" style="color:rgb(255, 184, 108)">with effect</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(68, 134, 255)">emit</span><span class="token function" style="color:rgb(80, 250, 123)">&lt;</span><span class="token plain">SwitchedOn&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token entry" style="color:rgb(233, 72, 21)">transition</span><span class="token plain"> switchOff</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token section" style="color:rgb(255, 184, 108)">from</span><span class="token plain"> On </span><span class="token section" style="color:rgb(255, 184, 108)">to</span><span class="token plain"> Off</span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain">  </span><span class="token section" style="color:rgb(255, 184, 108)">with effect</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(68, 134, 255)">emit</span><span class="token function" style="color:rgb(80, 250, 123)">&lt;</span><span class="token plain">SwitchedOff&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2;border-radius:0px"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" title="Copy" class="copyButton_eDfN clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div><p>A live bulb demo is available <a href="https://completium.github.io/bulb-event-demo/" target="_blank" rel="noopener noreferrer">here</a>.</p>]]></content>
        <author>
            <name>Benoit Rognier</name>
            <uri>https://www.linkedin.com/in/benoitrognier/</uri>
        </author>
        <category label="events" term="events"/>
        <category label="new feature" term="new feature"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome]]></title>
        <id>welcome</id>
        <link href="https://completium.github.io/archetype-docs/blog/welcome"/>
        <updated>2021-08-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are delighted to present this new documentation for the Archetype language.]]></summary>
        <content type="html"><![CDATA[<p>We are delighted to present this new documentation for the <a href="https://archetype-lang.org/" target="_blank" rel="noopener noreferrer">Archetype</a> language.</p>]]></content>
        <author>
            <name>Benoit Rognier</name>
            <uri>https://www.linkedin.com/in/benoitrognier/</uri>
        </author>
        <author>
            <name>Guillaume Duhamel</name>
            <uri>https://www.linkedin.com/in/guillaumeduhamel/</uri>
        </author>
        <category label="hello" term="hello"/>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
</feed>