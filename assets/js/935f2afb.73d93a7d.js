"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"1.3.0","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/archetype-docs/docs/intro","docId":"intro"},{"type":"link","label":"Installation","href":"/archetype-docs/docs/install","docId":"install"},{"type":"category","label":"Language Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Types","href":"/archetype-docs/docs/language-basics/types","docId":"language-basics/types"},{"type":"link","label":"Composite types","href":"/archetype-docs/docs/language-basics/composite","docId":"language-basics/composite"},{"type":"link","label":"Basic containers","href":"/archetype-docs/docs/language-basics/container","docId":"language-basics/container"},{"type":"link","label":"Cryptography","href":"/archetype-docs/docs/language-basics/crypto","docId":"language-basics/crypto"},{"type":"link","label":"Tickets","href":"/archetype-docs/docs/language-basics/ticket","docId":"language-basics/ticket"}]},{"type":"link","label":"Asset","href":"/archetype-docs/docs/asset","docId":"asset"},{"type":"link","label":"State Machine","href":"/archetype-docs/docs/statemachine","docId":"statemachine"},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Declarations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Identifier","href":"/archetype-docs/docs/reference/declarations/identifier","docId":"reference/declarations/identifier"},{"type":"link","label":"Archetype contract","href":"/archetype-docs/docs/reference/declarations/contract","docId":"reference/declarations/contract"},{"type":"link","label":"Storage","href":"/archetype-docs/docs/reference/declarations/storage","docId":"reference/declarations/storage"},{"type":"link","label":"Composite types","href":"/archetype-docs/docs/reference/declarations/compositetypes","docId":"reference/declarations/compositetypes"},{"type":"link","label":"Inlined","href":"/archetype-docs/docs/reference/declarations/inlined","docId":"reference/declarations/inlined"},{"type":"link","label":"Entrypoint","href":"/archetype-docs/docs/reference/declarations/entrypoint","docId":"reference/declarations/entrypoint"},{"type":"link","label":"Function","href":"/archetype-docs/docs/reference/declarations/function","docId":"reference/declarations/function"},{"type":"link","label":"View","href":"/archetype-docs/docs/reference/declarations/view","docId":"reference/declarations/view"}]},{"type":"link","label":"Types","href":"/archetype-docs/docs/reference/types","docId":"reference/types"},{"type":"category","label":"Instructions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Sequence","href":"/archetype-docs/docs/reference/instructions/sequence","docId":"reference/instructions/sequence"},{"type":"link","label":"Local variable","href":"/archetype-docs/docs/reference/instructions/localvariable","docId":"reference/instructions/localvariable"},{"type":"link","label":"Assignment","href":"/archetype-docs/docs/reference/instructions/assignment","docId":"reference/instructions/assignment"},{"type":"link","label":"Control","href":"/archetype-docs/docs/reference/instructions/control","docId":"reference/instructions/control"},{"type":"link","label":"Divergent","href":"/archetype-docs/docs/reference/instructions/divergent","docId":"reference/instructions/divergent"},{"type":"link","label":"Basic containers","href":"/archetype-docs/docs/reference/instructions/containers","docId":"reference/instructions/containers"},{"type":"link","label":"Asset","href":"/archetype-docs/docs/reference/instructions/asset","docId":"reference/instructions/asset"},{"type":"link","label":"Operation","href":"/archetype-docs/docs/reference/instructions/operation","docId":"reference/instructions/operation"}]},{"type":"category","label":"Expressions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Constants","href":"/archetype-docs/docs/reference/expressions/constants","docId":"reference/expressions/constants"},{"type":"category","label":"Operators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Access","href":"/archetype-docs/docs/reference/expressions/operators/access","docId":"reference/expressions/operators/access"},{"type":"link","label":"Copy","href":"/archetype-docs/docs/reference/expressions/operators/copy","docId":"reference/expressions/operators/copy"},{"type":"link","label":"Arithmetic","href":"/archetype-docs/docs/reference/expressions/operators/arithmetic","docId":"reference/expressions/operators/arithmetic"}]},{"type":"link","label":"Builtins","href":"/archetype-docs/docs/reference/expressions/builtins","docId":"reference/expressions/builtins"},{"type":"link","label":"Control","href":"/archetype-docs/docs/reference/expressions/controls","docId":"reference/expressions/controls"},{"type":"link","label":"Declaration","href":"/archetype-docs/docs/reference/expressions/declaration","docId":"reference/expressions/declaration"},{"type":"link","label":"Asset","href":"/archetype-docs/docs/reference/expressions/asset","docId":"reference/expressions/asset"}]}],"href":"/archetype-docs/docs/reference/"}]},"docs":{"asset":{"id":"asset","title":"Asset","description":"Archetype assets provide a high-level abstraction to handle collection of structured data.","sidebar":"docsSidebar"},"install":{"id":"install","title":"Installation","description":"Completium CLI","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Fast track","sidebar":"docsSidebar"},"language-basics/composite":{"id":"language-basics/composite","title":"Composite types","description":"Tuple","sidebar":"docsSidebar"},"language-basics/container":{"id":"language-basics/container","title":"Basic containers","description":"Set","sidebar":"docsSidebar"},"language-basics/crypto":{"id":"language-basics/crypto","title":"Cryptography","description":"Hash","sidebar":"docsSidebar"},"language-basics/ticket":{"id":"language-basics/ticket","title":"Tickets","description":"","sidebar":"docsSidebar"},"language-basics/types":{"id":"language-basics/types","title":"Types","description":"Basic types","sidebar":"docsSidebar"},"reference/declarations/compositetypes":{"id":"reference/declarations/compositetypes","title":"Composite types","description":"Archetype provides user-defined composite types on top of basic types.","sidebar":"docsSidebar"},"reference/declarations/contract":{"id":"reference/declarations/contract","title":"Archetype contract","description":"An archetype contract starts with the archetype keyword followed by a contract identifier.","sidebar":"docsSidebar"},"reference/declarations/entrypoint":{"id":"reference/declarations/entrypoint","title":"Entrypoint","description":"The contract code is structured as a set of entrypoints. The execution of an entrypoint may change the contract storage and/or generate blockchain operations (a transfer of tez to a contract or account, or a call to another contract\'s entrypoint).","sidebar":"docsSidebar"},"reference/declarations/function":{"id":"reference/declarations/function","title":"Function","description":"Entrypoints\' effect may call functions. A function returns a value, may fail, but cannot change the contract storage.","sidebar":"docsSidebar"},"reference/declarations/identifier":{"id":"reference/declarations/identifier","title":"Identifier","description":"The identifier of a contract element (parameter, variable, entrypoint, ...) is a string that starts with an alphabetic character (lower or upper case) followed by a string of alphanumeric characters (lower or upper case) or underscores. The maximum size of an identifier is 254. That is to say that an identifier verifies the following regular expression:","sidebar":"docsSidebar"},"reference/declarations/inlined":{"id":"reference/declarations/inlined","title":"Inlined","description":"Constant","sidebar":"docsSidebar"},"reference/declarations/storage":{"id":"reference/declarations/storage","title":"Storage","description":"Contract parameter","sidebar":"docsSidebar"},"reference/declarations/view":{"id":"reference/declarations/view","title":"View","description":"A view is a function that can be called by other contracts.","sidebar":"docsSidebar"},"reference/expressions/asset":{"id":"reference/expressions/asset","title":"Asset","description":"A.get(k : asset_key)","sidebar":"docsSidebar"},"reference/expressions/builtins":{"id":"reference/expressions/builtins","title":"Builtins","description":"A B C","sidebar":"docsSidebar"},"reference/expressions/constants":{"id":"reference/expressions/constants","title":"Constants","description":"balance","sidebar":"docsSidebar"},"reference/expressions/controls":{"id":"reference/expressions/controls","title":"Control","description":"In addition of being instructions, if and match with also come as conditional expressions.","sidebar":"docsSidebar"},"reference/expressions/declaration":{"id":"reference/expressions/declaration","title":"Declaration","description":"It is possible to declare a constant in an expression with the let c = v in e declaration expression: constant c is replaced by the evaluation of expression v in expression e.","sidebar":"docsSidebar"},"reference/expressions/operators/access":{"id":"reference/expressions/operators/access","title":"Access","description":"a[b]","sidebar":"docsSidebar"},"reference/expressions/operators/arithmetic":{"id":"reference/expressions/operators/arithmetic","title":"Arithmetic","description":"a + b","sidebar":"docsSidebar"},"reference/expressions/operators/copy":{"id":"reference/expressions/operators/copy","title":"Copy","description":"{ with }","sidebar":"docsSidebar"},"reference/index":{"id":"reference/index","title":"Reference","description":"This is the Archetype language reference.","sidebar":"docsSidebar"},"reference/instructions/asset":{"id":"reference/instructions/asset","title":"Asset","description":"A.add(a)","sidebar":"docsSidebar"},"reference/instructions/assignment":{"id":"reference/instructions/assignment","title":"Assignment","description":"a := b","sidebar":"docsSidebar"},"reference/instructions/containers":{"id":"reference/instructions/containers","title":"Basic containers","description":"Set","sidebar":"docsSidebar"},"reference/instructions/control":{"id":"reference/instructions/control","title":"Control","description":"if","sidebar":"docsSidebar"},"reference/instructions/divergent":{"id":"reference/instructions/divergent","title":"Divergent","description":"A divergent instruction is an instruction that fails. The effect of a failing instruction is to cancel all modifications (storage, operations) executed by the entrypoint so far. Hence a failing operation does not change anything on the contract state.","sidebar":"docsSidebar"},"reference/instructions/localvariable":{"id":"reference/instructions/localvariable","title":"Local variable","description":"Instructions presented below declare a local variable in entrypoints\' effect section.","sidebar":"docsSidebar"},"reference/instructions/operation":{"id":"reference/instructions/operation","title":"Operation","description":"transfer","sidebar":"docsSidebar"},"reference/instructions/sequence":{"id":"reference/instructions/sequence","title":"Sequence","description":"The effect of an entrypoint is composed of zero, one or several instructions presented below.","sidebar":"docsSidebar"},"reference/types":{"id":"reference/types","title":"Types","description":"A B C","sidebar":"docsSidebar"},"statemachine":{"id":"statemachine","title":"State Machine","description":"A state machine defines a global state and transitions from one state to another.","sidebar":"docsSidebar"}}}')}}]);