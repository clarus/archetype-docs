"use strict";(self.webpackChunkarchetype_docs=self.webpackChunkarchetype_docs||[]).push([[9513],{700:function(e,i,t){t.r(i),t.d(i,{assets:function(){return f},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=t(7462),n=t(3366),a=(t(7294),t(3905)),d=t(6886),o=[{id:"added"},{id:"aggregate"},{id:"and"},{id:"any"},{id:"archetype"},{id:"as"},{id:"assert"},{id:"asset"},{id:"asset_view"},{id:"at"},{id:"before"},{id:"begin"},{id:"big_map"},{id:"but"},{id:"by"},{id:"call"},{id:"called"},{id:"call_view"},{id:"const"},{id:"constant"},{id:"contract"},{id:"definition"},{id:"div"},{id:"do"},{id:"do_fail_if"},{id:"done"},{id:"do_require"},{id:"effect"},{id:"else"},{id:"emit"},{id:"emptylist"},{id:"end"},{id:"entry"},{id:"entrypoint"},{id:"enum"},{id:"event"},{id:"exists"},{id:"extension"},{id:"fail"},{id:"fail if"},{id:"fails"},{id:"false"},{id:"fold"},{id:"for"},{id:"forall"},{id:"from"},{id:"function"},{id:"getter"},{id:"identified"},{id:"if"},{id:"in"},{id:"initial"},{id:"initialized"},{id:"invariant"},{id:"iter"},{id:"label"},{id:"lambda"},{id:"left"},{id:"let"},{id:"list"},{id:"map"},{id:"match"},{id:"namespace"},{id:"none"},{id:"not"},{id:"on"},{id:"option"},{id:"or"},{id:"otherwise"},{id:"partition"},{id:"asset_key"},{id:"postcondition"},{id:"predicate"},{id:"record"},{id:"ref"},{id:"removed"},{id:"require"},{id:"require_entrypoint"},{id:"return"},{id:"right"},{id:"sapling_state"},{id:"sapling_transaction"},{id:"security"},{id:"self"},{id:"set"},{id:"shadow"},{id:"some"},{id:"sorted"},{id:"sourced"},{id:"specification"},{id:"states"},{id:"then"},{id:"ticket"},{id:"to"},{id:"transfer"},{id:"transition"},{id:"true"},{id:"type"},{id:"unmoved"},{id:"unpack"},{id:"Unit"},{id:"use"},{id:"var"},{id:"variable"},{id:"view"},{id:"when"},{id:"while"},{id:"with"},{id:"xor"}],s=["components"],c={sidebar_position:0},l="Identifier",p={unversionedId:"reference/declarations/identifier",id:"reference/declarations/identifier",title:"Identifier",description:"The identifier of a contract element (parameter, variable, entrypoint, ...) is a string that starts with an alphabetic character (lower or upper case) followed by a string of alphanumeric characters (lower or upper case) or underscores. The maximum size of an identifier is 254. That is to say that an identifier verifies the following regular expression:",source:"@site/docs/reference/declarations/identifier.md",sourceDirName:"reference/declarations",slug:"/reference/declarations/identifier",permalink:"/archetype-docs/docs/reference/declarations/identifier",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/declarations/identifier.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Reference",permalink:"/archetype-docs/docs/reference/"},next:{title:"Archetype contract",permalink:"/archetype-docs/docs/reference/declarations/contract"}},f={},u=[{value:"Keywords",id:"keywords",level:3}],h={toc:u};function m(e){var i=e.components,t=(0,n.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},h,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"identifier"},"Identifier"),(0,a.kt)("p",null,"The identifier of a contract element (",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/declarations/storage#parameter"},"parameter"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/declarations/storage#variable"},"variable"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/declarations/entrypoint"},"entrypoint"),", ...) is a string that starts with an alphabetic character (lower or upper case) followed by a string of alphanumeric characters (lower or upper case) or underscores. The maximum size of an identifier is 254. That is to say that an identifier verifies the following regular expression:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"([A-Za-z][A-Za-z0-9_]*){1,254}")),(0,a.kt)("h3",{id:"keywords"},"Keywords"),(0,a.kt)("p",null,"A keyword is a reserved identifier that cannot be used as identifier, unless it is prefixed by the ",(0,a.kt)("inlineCode",{parentName:"p"},"%")," character."),(0,a.kt)("p",null,"For example, ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/instructions/operation#transfer"},(0,a.kt)("inlineCode",{parentName:"a"},"transfer"))," is the builtin instruction to call an external contract; in order to declare an entrypoint named ",(0,a.kt)("inlineCode",{parentName:"p"},"transfer"),", prefix it with ",(0,a.kt)("inlineCode",{parentName:"p"},"%"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-archetype"},"entry %transfer() {\n  /* ... */\n}\n")),(0,a.kt)("p",null,"Below is the list of the language keywords."),(0,a.kt)(d.ZP,{container:!0,spacing:2,mdxType:"Grid"},o.map((function(e,i){return(0,a.kt)(d.ZP,{item:!0,key:"kw"+i,mdxType:"Grid"},(0,a.kt)("code",null,e.id))}))))}m.isMDXComponent=!0}}]);